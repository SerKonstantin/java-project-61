Вопросы для наставника:

1. Не работает запуск программы по щелчку на Tasks/application/run в панели Gradle, или по нажатию Run на основной
верхней панели. Использую WSL2, gradle 8.2.1 и openjdk 20.0.1 Работает если сделать исполняемый файл и запускать через
make, работает если компилировать и запускать руками из терминала, работает через ./gradlew run, а при нажатии run на
панели gradle в IDEA или Run на верхней панели с выпадающими меню выдает:
Exception in thread "main" java.util.NoSuchElementException at java.base/java.util.Scanner.throwFor(Scanner.java:945)
at java.base/java.util.Scanner.next(Scanner.java:1486) at hexlet.code.Cli.getName(Cli.java:9) at
hexlet.code.App.main(App.java:7)

(Неясно насколько это важно, тк кнопки по идее дублируют комманду ./gradlew run, которая работает)



2. CodeClimate показывает maintainability 'B' (в процесса было и 'C'), при этом предложения по улучшению выглядят
странно. Например, сократить код внутри метода с 30 до 25 строк (неужели в крупных проектах все методы в 25 строк
укладываются?), или, например, игру Even оценивают как Cognitive Complexity of 8 (exceeds 5 allowed), хотя на мой
взгляд код простой и понятный. Что с этим делать?



3. В классе Calc.java используется конструкция switch. В таком виде она проходит проверку линтера:
            String correctAnswer;
            switch (sign) {
                case "+":
                    correctAnswer = String.valueOf(firstNumber + secondNumber);
                    break;
                case "-":
                    correctAnswer = String.valueOf(firstNumber - secondNumber);
                    break;
                case "*":
                    correctAnswer = String.valueOf(firstNumber * secondNumber);
                    break;
                default:
                    System.out.println("Error: Sign is not implemented");
                    return;
            }

А в таком, более компактном виде, не проходит с ошибкой Inner assignments should be avoided:
            String correctAnswer;
            switch (sign) {
                case "+" -> correctAnswer = String.valueOf(firstNumber + secondNumber);
                case "-" -> correctAnswer = String.valueOf(firstNumber - secondNumber);
                case "*" -> correctAnswer = String.valueOf(firstNumber * secondNumber);
                default -> {
                    System.out.println("Error: Sign is not implemented");
                    return;
                }
            }

Переменная correctAnswer далее используется для сравнения с ответом игрока.
В чем проблема, как бороться, почему в первом варианте это не считается inner assignment, а во втором считается?
Как сделать лучше?
